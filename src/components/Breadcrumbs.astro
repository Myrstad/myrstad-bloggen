---
import { deSlugify } from '../js/utils';

//console.log(Astro.url.pathname.split("/"));
const splitPath = Astro.url.pathname.split('/');
interface linkWithName {
  name: string;
  url: string;
}

const breadcrumsLinks: Array<linkWithName> = [];

splitPath.forEach((part, index) => {
  if (index == 0)
    breadcrumsLinks.push({ name: 'hjem', url: '/' } as linkWithName);
  if (index != 0 && splitPath[index]) {
    let path = '/';
    for (let i = 1; i <= index; i++) {
      path += splitPath[i] + '/';
    }
    //console.log(path);
    breadcrumsLinks.push({ name: deSlugify(part), url: path } as linkWithName);
  }
});
---

<nav>
  <ul>
    {
      breadcrumsLinks.map((link) => (
        <li>
          <a href={link.url} set:text={link.name} />
        </li>
      ))
    }
  </ul>
</nav>

<style>
  nav {
    padding: 0 1rem;
    overflow-y: scroll;
  }

  ul {
    width: fit-content;
    max-width: 82rem;
    margin-inline: auto;
    padding: 0;
    display: flex;
    justify-content: center;
  }

  li {
    list-style: none;
  }
  ul li:nth-child(1) {
    z-index: 10;
  }
  ul li:nth-child(2) {
    z-index: 9;
  }
  ul li:nth-child(3) {
    z-index: 8;
  }
  ul li:nth-child(2) a {
    background-color: var(--clr-neutral-700);
    margin-left: -1.5rem;
    border-radius: 0 1.5rem 1.5rem 0;
    padding-left: 2.5rem;
  }
  ul li:nth-child(3) a {
    background-color: var(--clr-neutral-300);
    color: var(--clr-neutral-900);
    margin-left: -1.5rem;
    border-radius: 0 1.5rem 1.5rem 0;
    padding-left: 2.5rem;
  }

  a {
    display: flex;
    align-items: center;
    height: 3rem;
    font-size: 1.25rem;
    padding: 0 2rem;
    border-radius: 1.5rem;
    background-color: var(--clr-neutral-900);
    color: var(--clr-neutral-100);
    text-decoration: none;
  }

  @media screen and (max-width: 700px) {
    a {
      font-size: 1rem;
      padding: 0 1.5rem;
    }
  }
</style>
